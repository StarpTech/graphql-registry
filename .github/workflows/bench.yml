name: BENCH

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '*.md'
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  test:
    name: Node.js v${{ matrix.nodejs }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nodejs: [14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.nodejs }}

      - name: (env) cache
        uses: actions/cache@v2
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Start services
        run: |
          docker-compose up -d
          ./scripts/wait-for-healthy-container.sh postgres 30

      - name: Install
        run: npm ci --prefer-offline --no-audit

      - name: Create db schema
        run: DATABASE_URL="postgresql://postgres:changeme@localhost:5440/graphql-registry?schema=public" npx prisma db push --preview-feature

      - name: Build app image
        run: docker-compose up -d app

      - name: Bench
        run: |
          docker-compose run k6 run /benchmark/composed-schema.js

      - name: Clean services
        if: always()
        run: docker-compose down
